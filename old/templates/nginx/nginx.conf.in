user @AURA_USER_NAME@;
#ifdef NGX_HIGH_WORKERS
#ifdef NGX_GLOBAL
worker_processes 10;
#else
worker_processes 5;
#endif
#else
worker_processes 2;
#endif

error_log /var/log/nginx/aura-@AURA_USER_CLASS@-@AURA_USER_NAME@-error.log error;
pid /var/run/aura-@AURA_USER_CLASS@-@AURA_USER_NAME@-nginx.pid;

events {
    worker_connections 1024;
}

http {
    access_log off;
    keepalive_timeout 65;
    default_type application/octet-stream;
    log_format
        main  '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
    client_max_body_size 100m;
    proxy_buffering off;
    proxy_request_buffering off;
    fastcgi_buffering off;
    fastcgi_request_buffering off;
    include /aura/configuration/system/nginx/mime-types.inc;
#ifdef NGX_GLOBAL
    server {
        listen 80 default_server;
        listen [@AURA_IPV6@]:80 default_server;
        listen @AURA_IPV4@:80 default_server;
        server_name_in_redirect off;
        add_header X-BinOC configured=false always;
        add_header X-BinOC platform=aura always;
        add_header X-BinOC level=@AURA_VERSION@ always;
        add_header X-BinOC build=@BUILD_EDATE@ always;
#ifdef BUILD_PROJECT_SHA1
        add_header X-BinOC sha1=@BUILD_PROJECT_SHA1@ always;
#endif
        
        return 406;
    }

    include /aura/configuration/*/*/nginx/*.proxy;
#else
    include /aura/configuration/@AURA_USER_CLASS@/@AURA_USER_NAME@/nginx/*.vhost;
#endif
}