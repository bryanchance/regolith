#ifdef NGX_MAINDOMAIN
    server {
        listen [@AURA_IPV6@]:80;
        listen @AURA_IPV4@:80;
#ifdef NGX_ENABLE_SSL
        listen [@AURA_IPV6@]:443 ssl;
        listen @AURA_IPV4@:443 ssl;
        ssl_certificate /@AURA_USER_NAME@/secure/certificates/nginx/@NGX_SSL_CERT@.crt;
        ssl_certificate_key /@AURA_USER_NAME@/secure/certificates/nginx/@NGX_SSL_CERT@.dec.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers !aNULL:!LOW:!MD5:!EXP:CAMELLIA:AES256:HIGH:AES128:!RC4:!3DES:!SEED;
        ssl_prefer_server_ciphers on;
#endif
        server_name @NGX_SUBDOMAIN@.@NGX_ROOTDOMAIN@;
        add_header X-BinOC configured=true always;
        add_header X-BinOC platform=regolith always;
        add_header X-BinOC level=@AURA_VERSION@ always;
        add_header X-BinOC build=@BUILD_EDATE@ always;
#ifdef BUILD_PROJECT_SHA1
        add_header X-BinOC sha1=@BUILD_PROJECT_SHA1@ always;
#endif
        return 302 $scheme://@NGX_ROOTDOMAIN@$request_uri;
    }

#endif
    server {
        listen [@AURA_IPV6@]:80;
        listen @AURA_IPV4@:80;
#ifdef NGX_ENABLE_SSL
        listen [@AURA_IPV6@]:443 ssl;
        listen @AURA_IPV4@:443 ssl;
        ssl_certificate /@AURA_USER_NAME@/secure/certificates/nginx/@NGX_SSL_CERT@.crt;
        ssl_certificate_key /@AURA_USER_NAME@/secure/certificates/nginx/@NGX_SSL_CERT@.dec.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers !aNULL:!LOW:!MD5:!EXP:CAMELLIA:AES256:HIGH:AES128:!RC4:!3DES:!SEED;
        ssl_prefer_server_ciphers on;
#endif
#ifdef NGX_MAINDOMAIN
        server_name @NGX_ROOTDOMAIN@;
#else
        server_name @NGX_SUBDOMAIN@.@NGX_ROOTDOMAIN@;
#endif
#ifdef NGX_OVERRIDE_SUBDOMAIN
        root /@AURA_USER_NAME@/account/@NGX_OVERRIDE_SUBDOMAIN@.@NGX_ROOTDOMAIN@; @NGX_SUBDOMAIN@
#else
        root /@AURA_USER_NAME@/account/@NGX_SUBDOMAIN@.@NGX_ROOTDOMAIN@;
#endif
        index index.htm index.html index.php;
#ifdef NGX_ENABLE_AUTOINDEX
        autoindex on;
#else
        autoindex off;
#endif
        access_log off;
        absolute_redirect off;
#ifdef NGX_ENABLE_HTPASSWD
        auth_basic "@NGX_HTPASSWD_REALM@";
        auth_basic_user_file /regolith/secure/htpasswd/@NGX_HTPASSWD_FILE@;
#endif
#ifdef NGX_INCLUDE
#include @NGX_INCLUDE@
#endif   

        location @404 { return 404; }
        location @501 { return 501; }
        location / {
#ifdef NGX_ENABLE_PHOEBUS
            try_files $uri $uri/ @phoebus-rewrite;
#else
            try_files $uri/ $uri =404;
#endif
        }

#ifdef NGX_ENABLE_PHOEBUS
        location @phoebus-rewrite {
            rewrite ^ /index.php?component=site&path=$uri last;
        }
#endif

#ifdef NGX_ENABLE_PHP
        location ~ \.php$ {
            include /@AURA_USER_NAME@/config/nginx/standard-php.inc;
#ifndef NGX_ENABLE_PHP_404
            fastcgi_intercept_errors on;
            error_page 404 = @404;
            error_page 501 = @501;
#endif
#ifdef PHP_VERSION_70
            fastcgi_pass 127.0.0.1:@AURA_USER_PORT9@;
#else
            fastcgi_pass unix:/var/run/aura-@AURA_USER_CLASS@-@AURA_USER_NAME@-php.socket;
#endif
        }
#endif

        add_header X-BinOC configured=true always;
        add_header X-BinOC platform=regolith always;
        add_header X-BinOC level=@AURA_VERSION@ always;
        add_header X-BinOC build=@BUILD_EDATE@ always;
#ifdef BUILD_PROJECT_SHA1
        add_header X-BinOC sha1=@BUILD_PROJECT_SHA1@ always;
#endif
    }